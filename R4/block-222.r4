0( Block-222.r4 )

1xBL
10xBL
:HDR"Genetic Evolution"E; fHDR

0(Each connection is 32 bits)
0(first byte is input, 2nd is output)
0(So, [type:1][id:7][type:1][id:7][weight:16])

0(rC: current critter)

         10 sNCR   0(Number of critters)
          8 sNCN   0(Number of connections - in CELLs)
 rNCN 1+ 4* sCSZ   0(Critter size - in BYTES)
        128 sWX    0(World size X)
         64 sWY    0(World size Y)

xIAU 1000/1000*10000+ sBS   0(Brain start)
           rBS  1000+ sWS   0(World start address)
           rWS 50000+ sCS   0(Critters start address)

:NT (nid--id t) Get neuron id/type);
:NT hFF&#h7F&$7R;

:ND(nid--) dump neuron info);
:ND fNT "{ type: ".", id: "." }";

:CXY (--x y) Critter: x y);
:CXY rC# c@ $P c@;

:CNI(I--nid) Critter: input connection #I;
:CNI 2L rC+ c@;

:CNO(I--nid) Critter: output connection #I;
:CNO D 2L rC+ P c@;

:CNW(I--wt) Critter: weight #I);
:CNW 2L rC+ @ hFF&;

:CND (): Connection dump;
:CND # fCNI fND ", " # fCNO fND fCNW ", wt: ".;

:SCR (I--): Set Critter, I:[1..N];
:SCR D rCSZ * rCS + sC;

:RXY (x y--): Set X/Y;
:SXY rC P c! rC c!;

:RXY (--x y): Random X/Y;
:RXY rWX xr rWY xr;

:RNC (--): Create a random critter;
:RNC fRXY fSXY rC 4+ # rNCN 4*+[255 xr rI c!];

:CDN (): Critter dump connection;
:CDN 1 rNCN[E"    " rI fCND];

:CDM (--): Critter dump;
:CDM fCXY$"{ x: ". ", y: ".", [" fCDN E"]}";

:DAC (--): Dump all critters;
:DAC 1 rNCR[rI #.B fSCR fCDM E];

:RAC (--): Randomize all critters;
:RAC 1 rNCR[rI fSCR fRNC];

fRAC fDAC
