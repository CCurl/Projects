0( Block-222.r4 )

1xBL
10xBL
:HDR"Genetic Evolution"E; eHDR
:NTH 1000+1000/1000*;

0(Each connection is 32 bits)
0(first byte is input, 2nd is output)
0(So, [type:1][id:7][type:1][id:7][weight:16])

0(rC: current critter)

         25 sNCR   0(Number of critters)
          8 sNCN   0(Number of connections - in CELLs)
 rNCN 1+ 4* sCSZ   0(Critter size - in BYTES)
        150 sWX    0(World size X)
         40 sWY    0(World size Y)
  rWX rWY * sWSZ   0(World size)

xIH  8000+ eNTH  sBSA   0(Brain start address)
     rBSA  1000+ sWSA   0(World start address)
rWSA rWSZ+ eNTH  sCSA   0(Critters start address)

:WAT (x y--n);
:WAT $rWX*+rWSA+c@;

:WST (n x y--);
:WST $rWX*+rWSA+c!;

:WIN rWX rWY* rWSA+[0 rIc!];
 
:NT (nid--id t) Get neuron id/type);
:NT hFF&#h7F&$7R;

:ND(nid--) dump neuron info);
:ND eNT "{ type: ".", id: "." }";

:CXY (--x y) Critter: x y);
:CXY rC c@ rC P c@;

:CNI(I--nid) Critter: input connection #I;
:CNI 2L rC+ c@;

:CNO(I--nid) Critter: output connection #I;
:CNO D 2L rC+ P c@;

:CNW(I--wt) Critter: weight #I);
:CNW 2L rC+ @ hFF&;

:CND (): Connection dump;
:CND # eCNI eND ", " # eCNO eND eCNW ", wt: ".;

:SCR (I--): Set Critter, I:[1..N];
:SCR #sCI D rCSZ * rCSA + sC;

:SXY (x y--): Set X/Y;
:SXY rC P c! rC c!;

:RXY (--x y): Random X/Y;
:RXY rWX xr rWY xr;

:RNC (--): Create a random critter;
:RNC eRXY eSXY rC 4+ # rNCN 4*+[255 xr rI c!];

:CDN (): Critter dump connection;
:CDN 1 rNCN[E"    " rI eCND];

:CDM (--): Critter dump;
:CDM eCXY$"{ x: ". ", y: ".", [" eCDN E"]}";

:DAC (--): Dump all critters;
:DAC 1 rNCR[rI #.B eSCR eCDM E];

:RAC (--): Randomize all critters;
:RAC 1 rNCR[rI eSCR eRNC];

:CRS (--): Critter Show;
:CRS eCXY eGXY rC 7M 31+ 40 eSTC "*";

:CRU (--): Critter Unshow;
:CRU eCXY eGXY " ";

:STS (--): Show all critters;
:STS 1 rNCR[rI eSCR 100xr50<#(eCRS)_(eCRU)] eCLC;

eRAC 0(eCLS eCOF 1{\eSTS 0xW K?0=}K@\ eCON)
eDAC
