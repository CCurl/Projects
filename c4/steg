// Steganographer

// usage: c4 steg in.bmp out.bmp test.txt 
// c4:()> encode ( encode test.txt into out.bmp )
// c4:()> decode

load init

variable (src)
variable (dst)
variable (txt)

: src! (src) ! ; : src (src) @ ;
: dst! (dst) ! ; : dst (dst) @ ;
: txt! (txt) ! ; : txt (txt) @ ;

: open-src ( fn--fh ) fopen-r DUP src! ;
: open-dst ( fn--fh ) fopen-w DUP dst! ;
: open-txt ( fn--fh ) fopen-r DUP txt! ;

: close-src ( -- ) src IF src fclose 0 src! THEN ;
: close-dst ( -- ) dst IF dst fclose 0 dst! THEN ;
: close-txt ( -- ) txt IF txt fclose 0 txt! THEN ;

: read-src ( -- c )  src FGETC DROP  ;
: read-txt ( -- c )  txt IF txt FGETC 0= IF close-txt THEN EXIT THEN 0 ;
: write-dst  ( c -- ) dst FPUTC ;

: copy-hdr ( -- )  54 0 DO read-src write-dst LOOP ;
: skip-hdr ( -- )  54 0 DO read-src DROP LOOP ;
: copy-rest ( -- ) BEGIN 
        src FGETC 0= IF DROP UNLOOP EXIT THEN
        write-dst
    AGAIN ;

: one-bit ( b -- )  read-src $FE AND OR write-dst ;
: encode-1 ( -- )   read-txt 8 0 DO 2 /MOD one-bit LOOP DROP ;
: do-encode ( -- )  BEGIN encode-1 txt WHILE ;
: encode ( -- )
    r2 open-src NOT IF ." -src?" EXIT THEN
    r3 open-dst NOT IF ." -dst?" EXIT THEN
    r4 open-txt NOT IF ." -txt?" EXIT THEN
    copy-hdr do-encode copy-rest close-src close-dst ;

: T1 ( n--n )  read-src 1 AND IF DUP r9 OR s9 THEN ;
: decode-1 ( --c )  0 s9 1 8 0 DO T1 2* LOOP DROP r9 ;
: do-decode ( -- )  BEGIN decode-1 DUP IF DUP write-dst THEN WHILE ;
: decode ( -- )
    r3 open-src NOT IF ." -src?" 0 EXIT THEN
    r4 open-dst NOT IF ." -dst?" 0 EXIT THEN
    skip-hdr do-decode close-src close-dst ;
