0(Conway's game of life)

xX
:Code 0(Code:--) 0@ 1[n c@ #58=(n 1- c@ 59=("%n"),];

0(CurOff [--] Curson off)
0(CurOn [--]: Curson on)
0(ToXY [x y--]: Goto XY)
:ToXY "%e[%d"59,"%dH";
:CurOff 27"%c[?25l";
:CurOn 27"%c[?25h";
:Cls "%e[2J"1#ToXY;
:Cr "%n";

0(rR: Rows)
0(rC: Cols)
0(rM: Max Population Size)
:SetRows 0(n--) sR SetPopSz;
:SetCols 0(n--) sC SetPopSz;
:SetPopSz rR 2+ rC 2+ * sM rP rM+ 100+ sB;

0(rP: Population)
0(rB: Working Population)
0(rL: Address of line for output)
2000 sP rP 400- sL

0(T5 [a--b]: )
:T5 #c@i%c!i;

0(Alive [a--]: Cell is alive)
:Alive d# rC- T5 T5 T5 \# T5 i T5 \rC+ T5 T5 T5\;

0(LQ [a b--c]: Live?)
:LQ #2=(\^)3=(\1^)\0;

:RandPop rP s0 rM 0[xR hFF b& 200 > r0 c! i0];
:ClrBak rB s0 rM 0[0 r0 c! i0];
:BakToPop rBs1 rPs2 rM 0[r2c@ r1c@ LQ r2c! 0r1c! i1i2];

0(ToPop [c r--a])
0(ToBak [c r--a])
:ToPop rC*+rP+;
:ToBak rC*+rB+;

0(PRow [n a--]: Print row n)
0(PPop [--]: Print population)
:PRow $1$ToPop s1#s6rC0[32r1c@(\'*)r6c! i6i1] 0r6c!t;
:PPop 1#ToXY rR 0[n i rL PRow Cr];

:Proc 1#ToBak s4 rC rR ToPop 1#ToPop[n c@(r4 Alive) i4];
:OneGen Proc BakToPop PPop;

25 SetRows 100 SetCols
0(: Gen1  key? ;)
:Gens 0[OneGen r7.i7];
:Life 1 s7 ClrBak RandPop CurOff Cls 1000 Gens CurOn;
:Reload 1000#|life|\xL;
0(Life)
