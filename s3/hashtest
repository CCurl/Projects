xX 0(Reset s3)
0(hash table, size, algo, stats)
:HashTbl 0(HashTbl:--n) 2000;
:HashSZ 0(--n) 2048;
:H5381 0(a n--) \\ 5381 sH;
:HInit 0(a n--) 1(H5381^) 0 sH 0[# c@ rB 32* + sH i]\ 0(rH.b);
:HSub 0(c--) rS- rH rM* rH b^ + sH;
:Hash 0(a n--h) %% HInit $ sX 0[rX c@ HSub iX] rH HashSZ 1- b&;
:HSet 0(Mark:h--) HashTbl+ #@i$!;
:ClrHashTbl 0(--) HashTbl HashSZ 0[0 % ! i]\;
:Count0 0(Cnt0:--n) 0sX HashTbl sI 0 HashSZ 0[rI @ 0= (i) iI];
:Count1 0(Cnt1:--n) 0sX HashTbl sI 0 HashSZ 0[rI @ 1= (i) iI];
:Stats 0(Stats:--) Count1 Count0 "num 0: %d, 1:%d" ;

0(Input strings, file or random)
:StrBuf 0(StringBuf:--n) 4000;
:OpenF 0(OpenFile:--f) StrBuf#|hashwords|\ 0 fO #s1;
:ReadF 0(ReadFile:--) OpenF 0=(1 C150^) StrBuf s2 {r1 fR $ r2 c! i2} r1 fC d2;
:QReadF 0(ReadFile?:--) C151 0=(ReadF StrBuf sW);
:Coll 0(Collect:ch--) rX c! iX;
:GenCh 0(GenCh:ch--) xR a 25 x% + Coll;
:UL 0(Upper--) 'a $(\'A) GenCh;
:RandLen 0(RandL--n) xR 7 b& i s9;
:RandW 0(RandW:--addr len) RandLen StrBuf sX 1 UL r9 0[0 UL] 0 Coll StrBuf r9 i;
:FileW 0(FileW:--addr len) rW 0{rW c@ 32> #s2 (i) iW r2};
:NextW 0(NextW:--addr len) C151 (RandW^) FileW;
:C150 0(isRand!:f--) StrBuf 1- c!;
:C151 0(isRand?:--f) StrBuf 1- c@;

:Loop 0(numWords--) 0[NextW Hash HSet];
:Run1 0(numWords--cnt) ClrHashTbl QReadF Loop Count1;
:Avg 0(--) rT 100* rN rR */ " (avg: %d%%)%n";
:Runs 0(Runs:--) 0sT rR 0[rN Run1 rT+sT] Avg;
:RunTest 0(Test:n--) #sN "%d WORDS" Runs;
:RunTests 0(Tests:--) 50 5 0[# RunTest 100+]\;
:Reload 0(Reload:--) StrBuf#|hashtest|\xL;
:Type 0(Type:addr n--) 0[# c@ , i]\;
:Code 0(Code:--) 0 l@ 1[n c@ #58=(n d c@ 59=("%n"),];
:DoFile "Words from the file ...%n" 1 sR 0 C150 RunTests;
:DoRand "%n Random words ...%n" 500 sR 1 C150 RunTests;
16 sM 65 sS 
DoFile DoRand
